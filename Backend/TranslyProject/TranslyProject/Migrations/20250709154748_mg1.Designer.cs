// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TranslyProject.Data;

#nullable disable

namespace TranslyProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250709154748_mg1")]
    partial class mg1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TranslyProject.Models.Commande", b =>
                {
                    b.Property<int>("Id_Com")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Com"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DateCommande")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gouvernorat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_User")
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Com");

                    b.HasIndex("Id_User");

                    b.ToTable("Commandes");
                });

            modelBuilder.Entity("TranslyProject.Models.Demande", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdresseEnlevement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdresseLivraison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateDemande")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSouhaitee")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Commande")
                        .HasColumnType("int");

                    b.Property<int>("Id_User")
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Commande");

                    b.HasIndex("Id_User");

                    b.ToTable("Demandes");
                });

            modelBuilder.Entity("TranslyProject.Models.Offre", b =>
                {
                    b.Property<int>("IdOffre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOffre"));

                    b.Property<DateTime>("DateOffre")
                        .HasColumnType("datetime2");

                    b.Property<int>("DelaiLivraison")
                        .HasColumnType("int");

                    b.Property<int>("Id_Demande")
                        .HasColumnType("int");

                    b.Property<int>("Id_User")
                        .HasColumnType("int");

                    b.Property<int>("PrixPropose")
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdOffre");

                    b.HasIndex("Id_Demande");

                    b.HasIndex("Id_User");

                    b.ToTable("Offres");
                });

            modelBuilder.Entity("TranslyProject.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gouvernorat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mdp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TranslyProject.Models.Commande", b =>
                {
                    b.HasOne("TranslyProject.Models.User", "User")
                        .WithMany("Commandes")
                        .HasForeignKey("Id_User")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TranslyProject.Models.Demande", b =>
                {
                    b.HasOne("TranslyProject.Models.Commande", "Commande")
                        .WithMany("Demandes")
                        .HasForeignKey("Id_Commande")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TranslyProject.Models.User", "User")
                        .WithMany("Demandes")
                        .HasForeignKey("Id_User")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Commande");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TranslyProject.Models.Offre", b =>
                {
                    b.HasOne("TranslyProject.Models.Demande", "Demande")
                        .WithMany("Offres")
                        .HasForeignKey("Id_Demande")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TranslyProject.Models.User", "User")
                        .WithMany("Offres")
                        .HasForeignKey("Id_User")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Demande");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TranslyProject.Models.Commande", b =>
                {
                    b.Navigation("Demandes");
                });

            modelBuilder.Entity("TranslyProject.Models.Demande", b =>
                {
                    b.Navigation("Offres");
                });

            modelBuilder.Entity("TranslyProject.Models.User", b =>
                {
                    b.Navigation("Commandes");

                    b.Navigation("Demandes");

                    b.Navigation("Offres");
                });
#pragma warning restore 612, 618
        }
    }
}
